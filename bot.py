import os
from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update
from telegram.ext import ApplicationBuilder, CommandHandler, CallbackQueryHandler, ContextTypes

TOKEN = os.getenv("TOKEN")

if not TOKEN:
    print("‚ùå –û–®–ò–ë–ö–ê: –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
    exit()

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    print("‚úÖ –ü–æ–ª—É—á–µ–Ω /start")
    text = (
        "–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç Gulyai:\n"
        "1. –ó–∞–ø–æ–ª–Ω–∏ –∞–Ω–∫–µ—Ç—É\n"
        "2. –ù–∞–∂–º–∏ '–ì–æ—Ç–æ–≤ –∫ –≤—Å—Ç—Ä–µ—á–µ'\n"
        "3. –û–±—â–∞–π—Å—è —Å –¥—Ä—É–≥–∏–º–∏ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å."
    )
    keyboard = [[InlineKeyboardButton("–î–∞–ª–µ–µ", callback_data="next_step")]]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text(text, reply_markup=reply_markup)

async def next_step(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    await query.edit_message_text("‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ: –≥—É–ª—è–π—Ç–µ —Ç–æ–ª—å–∫–æ –≤ –±–µ–∑–æ–ø–∞—Å–Ω—ã—Ö –º–µ—Å—Ç–∞—Ö!")

def main():
    print(f"üì¶ –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω: {TOKEN[:5]}...")
    app = ApplicationBuilder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CallbackQueryHandler(next_step, pattern="^next_step$"))
    print("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    app.run_polling()

if __name__ == "__main__":
    main()
